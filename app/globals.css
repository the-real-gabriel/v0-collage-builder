@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5% 15%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5% 64.9%;

    --radius: 0.5rem;
    --grid-rows: 2;
    --grid-columns: 2;
    --grid-gap: 10px;
    --grid-width: 800px;
    --grid-height: 600px;
    --current-scale: 1;
    --corner-radius: 0px;
    --grid-line-color: #e5e7eb;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

/* Base layout structure */
.app-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: hidden;
}

.app-content {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
  height: calc(100vh - 64px - 40px); /* Subtract header height and tray header height */
  margin-top: 64px; /* Add this line to push content below header */
  overflow: hidden;
  background-color: #e5e7eb; /* Light gray color for the gap */
  position: relative;
  gap: 1px; /* 1px gap between grid cells */
}

/* Update the app-content children to have white background to create the grid effect */
.app-content > * {
  background-color: white;
  border: none; /* Remove any borders */
}

/* Remove the pseudo-element that was creating the continuous border effect */
.app-content::before {
  display: none;
}

.app-header {
  position: fixed; /* Change from grid-row to fixed positioning */
  top: 0;
  left: 0;
  height: 64px;
  width: 100%;
  z-index: 50;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
  background-color: white;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.02);
}

.topbar {
  grid-column: 2;
  grid-row: 1;
  z-index: 10;
  background-color: white;
  border: none;
}

.sidebar {
  grid-column: 1;
  grid-row: 2;
  z-index: 10;
  background-color: white;
  border: none;
}

/* Improved canvas container styling */
.canvas-container {
  position: relative;
  overflow: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #fafafa;
  padding: 0; /* Remove any padding */
  width: 100%; /* Ensure it fills the entire grid cell width */
  height: 100%; /* Ensure it fills the entire grid cell height */
  grid-column: 2;
  grid-row: 2;
}

/* Improved grid wrapper styling */
.grid-wrapper {
  position: absolute;
  will-change: transform;
  margin: 0; /* Ensure no margin is applied */
  display: flex;
  justify-content: center;
  align-items: center;
  contain: layout;
  /* Remove the transform and transition properties */
}

/* Ensure the grid container has proper positioning */
.grid-container {
  position: relative;
  background: white;
}

.canvas-area {
  flex: 1;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

/* Grid container - allow it to be any size */
.grid-container {
  display: grid !important;
  grid-template-rows: repeat(var(--grid-rows, 2), minmax(50px, 1fr)) !important;
  grid-template-columns: repeat(var(--grid-columns, 2), minmax(50px, 1fr)) !important;
  gap: var(--grid-gap, 10px) !important;
  width: var(--grid-width, 800px) !important;
  height: var(--grid-height, 600px) !important;
  background-color: white;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);
  transition: transform 0.3s ease, gap 0.3s ease;
  overflow: visible !important;
  box-sizing: border-box !important;
  position: relative;
  contain: layout;
  will-change: transform;
  transform: translateZ(0) scale(var(--current-scale, 1));
  transform-origin: 0 0; /* Change to top left (0 0) */
}

/* Ensure all grid cells maintain consistent dimensions */
.grid-container > * {
  box-sizing: border-box !important;
  min-width: 0 !important;
  min-height: 50px !important;
  width: 100% !important;
  height: 100% !important;
  overflow: hidden !important;
}

.sidebar-area {
  grid-column: 2;
  width: 280px;
  border-left: 1px solid rgba(0, 0, 0, 0.03);
  background-color: white;
  z-index: 20;
}

/* Custom dialog animation */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  to {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.95);
  }
}

.dialog-content-animation {
  animation: scaleIn 0.2s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

.dialog-content-animation[data-state="closed"] {
  animation: scaleOut 0.2s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

/* Custom transitions */
.transition-all {
  transition-property: transform, opacity;
  transition-duration: 150ms;
  will-change: transform, opacity;
}

/* Improved focus styles */
:focus-visible {
  outline: 2px solid rgba(0, 0, 0, 0.1);
  outline-offset: 2px;
}

/* Improved scrollbars */
::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.06);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.1);
}

/* Empty cell styling */
.empty-cell,
.template-placeholder {
  transition: all 0.2s ease;
  border: 1px dashed rgba(0, 0, 0, 0.06);
  background-color: rgba(0, 0, 0, 0.01);
  box-sizing: border-box !important;
  width: 100% !important;
  height: 100% !important;
  min-height: 50px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
}

.empty-cell:hover {
  border-color: rgba(0, 0, 0, 0.1);
  background-color: rgba(0, 0, 0, 0.02);
}

.template-placeholder {
  border: 1px dashed rgba(0, 0, 0, 0.08);
  background-color: rgba(0, 0, 0, 0.02);
}

.empty-cell {
  /* Light gray styling for empty cells */
  border: 1px dashed #e5e7eb;
  background-color: rgba(249, 250, 251, 0.3);
  transition: all 0.2s ease;
  box-sizing: border-box;
  min-width: 30px;
  min-height: 30px;
}

.empty-cell:hover {
  background-color: rgba(243, 244, 246, 0.5);
  border-color: #d1d5db;
}

.template-cell {
  /* Blue styling for template cells */
  border: 2px dashed #bfdbfe;
  background-color: rgba(219, 234, 254, 0.3);
  transition: all 0.2s ease;
  box-sizing: border-box;
  min-width: 30px;
  min-height: 30px;
}

.template-cell:hover {
  background-color: rgba(219, 234, 254, 0.5);
  border-color: #93c5fd;
}

/* Ensure the grid container has proper styling */
.grid-container {
  display: grid;
  min-height: 100px;
  min-width: 100px;
  background-color: white;
  box-sizing: border-box;
}

/* Ensure all grid items have consistent box-sizing */
.grid-container > * {
  box-sizing: border-box;
}

/* Box styling */
.grid-box {
  transition: all 0.2s ease;
  overflow: hidden;
  will-change: transform;
  transform: translateZ(0);
  /* No border-radius here */
}

.grid-box.selected {
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 12px rgba(0, 0, 0, 0.05);
}

.grid-box-controls {
  opacity: 0;
  transition: opacity 0.2s ease;
}

.grid-box:hover .grid-box-controls,
.grid-box.selected .grid-box-controls {
  opacity: 1;
}

/* Resize handles */
.resize-handle {
  background-color: rgba(0, 0, 0, 0.5);
  transition: opacity 0.2s ease;
}

/* Custom slider styling */
.slider-thin {
  height: 4px;
}

.slider-thin[data-orientation="horizontal"] .slider-track {
  height: 4px;
}

.slider-thin[data-orientation="horizontal"] .slider-range {
  height: 4px;
}

.slider-thin .slider-thumb {
  height: 14px;
  width: 14px;
}

/* Add more spacing between slider components */
.slider-container {
  margin-bottom: 16px; /* Add space between slider groups */
}

.slider-label-row {
  margin-bottom: 8px; /* Add space between label and slider */
}

/* Custom button styling */
.btn-subtle {
  background-color: #f5f5f5;
  border-color: #e5e5e5;
  color: rgba(0, 0, 0, 0.7);
  font-weight: 450;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.02);
  transition: all 0.2s ease;
}

.btn-subtle:hover {
  background-color: #e9e9e9;
  border-color: rgba(0, 0, 0, 0.12);
}

.btn-subtle:active {
  background-color: rgba(0, 0, 0, 0.04);
}

.btn-ghost {
  color: rgba(0, 0, 0, 0.6);
  font-weight: 450;
}

.btn-ghost:hover {
  background-color: rgba(0, 0, 0, 0.04);
}

.btn-primary {
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
  font-weight: 450;
}

.btn-primary:hover {
  background-color: rgba(0, 0, 0, 0.9);
}

/* Custom tabs styling */
.tabs-slim .tab-trigger {
  height: 32px;
  padding: 0 12px;
  font-size: 12px;
  border-radius: 6px;
  color: rgba(0, 0, 0, 0.6);
  font-weight: 450;
}

.tabs-slim .tab-list {
  background-color: rgba(0, 0, 0, 0.02);
  padding: 3px;
  border-radius: 8px;
}

/* Custom card styling */
.card-subtle {
  background-color: white;
  border: 1px solid rgba(0, 0, 0, 0.05);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);
  border-radius: 12px;
}

/* Custom input styling */
.input-slim {
  height: 34px;
  font-size: 14px;
  border: 1px solid rgba(0, 0, 0, 0.08);
}

/* Custom accordion styling */
.accordion-clean .accordion-trigger {
  padding: 12px 16px;
  font-size: 14px;
  color: rgba(0, 0, 0, 0.7);
}

.accordion-clean .accordion-content {
  padding: 0 16px 16px;
}

/* Custom dialog styling */
.dialog-clean .dialog-content {
  border-radius: 12px;
  border: none;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.08);
}

.dialog-clean .dialog-header {
  padding: 20px 24px 12px;
}

.dialog-clean .dialog-footer {
  padding: 12px 24px 20px;
}

/* Custom progress styling */
.progress-slim {
  height: 3px;
  border-radius: 1.5px;
  overflow: hidden;
}

.progress-slim .progress-indicator {
  height: 3px;
}

/* Custom switch styling */
.switch-slim .switch-thumb {
  height: 14px;
  width: 14px;
}

/* Custom tooltip styling */
.tooltip-clean {
  border-radius: 6px;
  font-size: 12px;
  padding: 6px 10px;
  background-color: rgba(0, 0, 0, 0.8);
  color: white;
}

/* Custom alert styling */
.alert-clean {
  border-radius: 8px;
  padding: 12px 16px;
  border: 1px solid rgba(0, 0, 0, 0.05);
}

/* Custom select styling */
.select-slim .select-trigger {
  height: 34px;
  font-size: 14px;
  border: 1px solid rgba(0, 0, 0, 0.08);
}

/* Custom label styling */
.label-clean {
  font-size: 13px;
  font-weight: 450;
  color: rgba(0, 0, 0, 0.6);
}

/* Improved typography */
.typography-heading {
  font-weight: 500;
  letter-spacing: -0.01em;
  color: rgba(0, 0, 0, 0.8);
}

.typography-body {
  font-weight: 400;
  letter-spacing: 0.01em;
  color: rgba(0, 0, 0, 0.7);
}

.typography-caption {
  font-size: 12px;
  color: rgba(0, 0, 0, 0.5);
}

/* Improved shadows */
.shadow-subtle {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
}

.shadow-medium {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
}

/* Photo Tray Styles */
.photo-tray-container {
  width: 100%;
  border-top: 1px solid #eee;
  background-color: white;
  z-index: 20;
  transition: height 0.3s ease;
  contain: layout;
  /* Remove position: fixed */
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
  height: auto; /* Allow height to be determined by content */
}

/* Add a class for the collapsed state */
.photo-tray-container.collapsed {
  height: 40px; /* Just enough for the header */
}

.photo-tray {
  width: 100%;
  padding: 0;
  margin: 0;
  transition: height 0.3s ease;
  backdrop-filter: blur(8px);
  box-sizing: border-box;
  max-width: 100%; /* Full width now that sidebar is removed */
}

.photo-tray .hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.photo-tray .hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
  -webkit-overflow-scrolling: touch;
}

.photo-tray-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 16px;
  background-color: #f9f9f9;
  border-bottom: 1px solid #eee;
  cursor: pointer;
}

.photo-tray-content {
  height: 120px; /* Fixed height for the content area */
  transition: height 0.3s ease;
  overflow: hidden;
}

/* Add a class for the collapsed content */
.photo-tray-content.collapsed {
  height: 0;
  padding: 0;
}

.photo-tray-dropzone {
  position: relative;
  height: 120px;
  border: 2px dashed #eee;
  border-radius: 4px;
  margin: 10px;
  transition: all 0.2s ease;
}

.photo-tray-dropzone.drag-active {
  border-color: #3b82f6;
  background-color: rgba(59, 130, 246, 0.05);
}

/* Styles for when a box is being dragged over the tray */
.photo-tray-content:hover .photo-tray-dropzone {
  border-color: #d1d5db;
}

/* Enhanced drag and drop styles */
.drag-source {
  opacity: 0.5;
  transform: scale(0.95);
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.drop-target {
  outline: 2px dashed rgba(59, 130, 246, 0.5);
  background-color: rgba(59, 130, 246, 0.05);
}

.photo-tray-dropzone.drag-active {
  background-color: rgba(59, 130, 246, 0.1);
  border: 2px dashed #3b82f6;
  border-radius: 0.5rem;
  margin: 0.5rem;
}

/* Dragging states */
[data-dragging="true"] {
  opacity: 0.5;
  transform: scale(1.05);
  z-index: 10;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* Ensure drop target highlights are very visible */
[data-drop-target="true"],
*[data-drop-target="true"] {
  outline: 2px solid #3b82f6 !important;
  outline-offset: -2px;
  background-color: rgba(59, 130, 246, 0.05) !important;
  z-index: 5;
}

/* Optimize image rendering */
img {
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

/* Hide scrollbar for cleaner UI */
.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

/* Add these styles to ensure border radius is applied consistently */
@layer utilities {
  .image-rounded {
    overflow: hidden !important;
  }

  .image-rounded img {
    border-radius: inherit !important;
  }
}

/* Image container styling */
.image-container {
  position: relative !important;
  width: 100% !important;
  height: 100% !important;
  overflow: hidden !important;
  box-sizing: border-box !important;
  display: block !important;
}

.image-container > span {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  overflow: hidden !important;
  box-sizing: border-box !important;
  border-radius: inherit !important;
}

.image-container img {
  object-fit: cover !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
  border-radius: inherit !important;
}

/* Fix for Next.js Image component */
div[style*="border-radius"] > span {
  border-radius: inherit !important;
  overflow: hidden !important;
}

div[style*="border-radius"] > span > img {
  object-fit: cover !important;
  width: 100% !important;
  height: 100% !important;
}

/* Fix for selection and hover outlines */
div[style*="border-radius"].ring-2 {
  overflow: hidden !important;
}

/* Ensure all Next.js image wrappers respect border radius */
span[style*="position:absolute"],
span[style*="position: absolute"] {
  border-radius: inherit !important;
  overflow: hidden !important;
}

/* Target the specific Next.js image wrapper */
span[style*="box-sizing:border-box"],
span[style*="box-sizing: border-box"] {
  border-radius: inherit !important;
  overflow: hidden !important;
}

/* Ensure all images respect their container's border radius */
img {
  border-radius: inherit !important;
}

/* Add a specific class for rounded images */
.rounded-image-container,
.rounded-image-container > span,
.rounded-image-container img {
  border-radius: var(--corner-radius, 0px) !important;
  overflow: hidden !important;
}

/* Add these debugging styles to help visualize padding and margins */
.debug-layout * {
  outline: 1px solid rgba(255, 0, 0, 0.2);
}

.debug-layout .grid-container {
  outline: 2px solid rgba(0, 0, 255, 0.3);
}

.debug-layout .box {
  outline: 2px solid rgba(0, 255, 0, 0.3);
}

/* Add a new class for the corner element */
.corner {
  grid-column: 1;
  grid-row: 1;
  background-color: white;
  z-index: 10;
}
